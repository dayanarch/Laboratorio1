/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ModuloServidor.common;

import com.Servidor.common.AdministradorServidores;
import com.Servidor.common.ServidorFisico;
import com.Servidor.common.ServidorVirtual;
import com.Usuario.common.AdministrarUsuarios;
import java.awt.Toolkit;
import java.beans.*;
import java.util.ArrayList;
import java.util.regex.Pattern;
import javax.swing.*;

/**
 *
 * @author Administrador
 */
public class RegistrarServidor extends javax.swing.JFrame {

    AdministradorServidores admin_servidores;
    ArrayList lista_servidores; 
    int numeserie;
    
    /**
     * Creates new form RegistrarServidor
     */
    public RegistrarServidor() {
    
        initComponents();
    admin_servidores = new AdministradorServidores();
    lista_servidores = admin_servidores.Get_Servidores();
    numeserie = admin_servidores.UltimaSerie()+1;
    
    lblCodigo.setText("Num.Serie del Servidor: "+numeserie);

    rbtnF.setSelected(true);
    
    lblDataCenter.setEnabled(false);
    lblTecnologia.setEnabled(false);
    lblVirtualizacion.setEnabled(false);
    txfdataCenter.setEnabled(false);
    txftecnologia.setEnabled(false);
    combovirtualizacion.setEnabled(false);
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDataCenter = new javax.swing.JLabel();
        lblCantMem = new javax.swing.JLabel();
        txftecnologia = new javax.swing.JTextField();
        txfdataCenter = new javax.swing.JTextField();
        lblCantCpu = new javax.swing.JLabel();
        txfcpu = new javax.swing.JTextField();
        lblDireccion = new javax.swing.JLabel();
        txfmemoria = new javax.swing.JTextField();
        lblTamDiscoDuro = new javax.swing.JLabel();
        txfdiscoduro = new javax.swing.JTextField();
        comboArquitectura = new javax.swing.JComboBox();
        lblHostname = new javax.swing.JLabel();
        rbtnF = new javax.swing.JRadioButton();
        lblTecnologia = new javax.swing.JLabel();
        lblArquitectura = new javax.swing.JLabel();
        txfhostname = new javax.swing.JTextField();
        lblSO = new javax.swing.JLabel();
        txfIP2 = new javax.swing.JTextField();
        comboSistemaoperativo = new javax.swing.JComboBox();
        lblVirtualizacion = new javax.swing.JLabel();
        combovirtualizacion = new javax.swing.JComboBox();
        rbtnV = new javax.swing.JRadioButton();
        lblTitulo = new javax.swing.JLabel();
        btnRegistrar = new javax.swing.JButton();
        lblDot1 = new javax.swing.JLabel();
        lblCodigo = new javax.swing.JLabel();
        txfIP1 = new javax.swing.JTextField();
        lblDot2 = new javax.swing.JLabel();
        lblDot3 = new javax.swing.JLabel();
        txfIP3 = new javax.swing.JTextField();
        txfIP4 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("JfModuloServidor"); // NOI18N
        setResizable(false);
        getContentPane().setLayout(null);

        lblDataCenter.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblDataCenter.setForeground(new java.awt.Color(153, 255, 255));
        lblDataCenter.setText("DataCenter");
        getContentPane().add(lblDataCenter);
        lblDataCenter.setBounds(10, 300, 80, 15);

        lblCantMem.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCantMem.setForeground(new java.awt.Color(153, 255, 255));
        lblCantMem.setText("Cantidad de memoria");
        getContentPane().add(lblCantMem);
        lblCantMem.setBounds(310, 160, 140, 15);
        getContentPane().add(txftecnologia);
        txftecnologia.setBounds(150, 360, 120, 22);
        getContentPane().add(txfdataCenter);
        txfdataCenter.setBounds(148, 297, 120, 22);

        lblCantCpu.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCantCpu.setForeground(new java.awt.Color(0, 0, 153));
        lblCantCpu.setText("Cantidad de CPU");
        getContentPane().add(lblCantCpu);
        lblCantCpu.setBounds(310, 200, 110, 15);

        txfcpu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txfcpuKeyTyped(evt);
            }
        });
        getContentPane().add(txfcpu);
        txfcpu.setBounds(487, 194, 120, 22);

        lblDireccion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblDireccion.setForeground(new java.awt.Color(153, 255, 255));
        lblDireccion.setText("Dirección IP");
        getContentPane().add(lblDireccion);
        lblDireccion.setBounds(14, 171, 72, 15);

        txfmemoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txfmemoriaKeyTyped(evt);
            }
        });
        getContentPane().add(txfmemoria);
        txfmemoria.setBounds(487, 118, 120, 22);

        lblTamDiscoDuro.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTamDiscoDuro.setForeground(new java.awt.Color(153, 255, 255));
        lblTamDiscoDuro.setText("Tamaño de disco duro");
        getContentPane().add(lblTamDiscoDuro);
        lblTamDiscoDuro.setBounds(310, 120, 140, 15);

        txfdiscoduro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txfdiscoduroKeyTyped(evt);
            }
        });
        getContentPane().add(txfdiscoduro);
        txfdiscoduro.setBounds(487, 156, 120, 22);

        comboArquitectura.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Arquitectura 64 bits", "Arquitectura 32 bits" }));
        comboArquitectura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboArquitecturaActionPerformed(evt);
            }
        });
        getContentPane().add(comboArquitectura);
        comboArquitectura.setBounds(148, 232, 139, 22);

        lblHostname.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblHostname.setForeground(new java.awt.Color(153, 255, 255));
        lblHostname.setText("Hostname");
        getContentPane().add(lblHostname);
        lblHostname.setBounds(10, 130, 70, 15);

        rbtnF.setBackground(new java.awt.Color(0, 153, 255));
        rbtnF.setText("Servidor Físico");
        rbtnF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbtnFMouseClicked(evt);
            }
        });
        getContentPane().add(rbtnF);
        rbtnF.setBounds(158, 69, 110, 25);

        lblTecnologia.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTecnologia.setForeground(new java.awt.Color(153, 255, 255));
        lblTecnologia.setText("Versión de tecnología");
        getContentPane().add(lblTecnologia);
        lblTecnologia.setBounds(10, 370, 140, 15);

        lblArquitectura.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblArquitectura.setForeground(new java.awt.Color(153, 255, 255));
        lblArquitectura.setText("Arquitectura");
        getContentPane().add(lblArquitectura);
        lblArquitectura.setBounds(10, 235, 90, 15);
        getContentPane().add(txfhostname);
        txfhostname.setBounds(150, 130, 120, 22);

        lblSO.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblSO.setForeground(new java.awt.Color(0, 0, 153));
        lblSO.setText("Sistema Operativo");
        getContentPane().add(lblSO);
        lblSO.setBounds(310, 240, 120, 15);

        txfIP2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txfIP2KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txfIP2KeyTyped(evt);
            }
        });
        getContentPane().add(txfIP2);
        txfIP2.setBounds(140, 170, 30, 22);
        txfIP2.getAccessibleContext().setAccessibleDescription("");

        comboSistemaoperativo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Windows", "Ubuntu", "Mac OS X", "Otro..." }));
        comboSistemaoperativo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSistemaoperativoActionPerformed(evt);
            }
        });
        getContentPane().add(comboSistemaoperativo);
        comboSistemaoperativo.setBounds(487, 232, 120, 22);

        lblVirtualizacion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblVirtualizacion.setForeground(new java.awt.Color(153, 255, 255));
        lblVirtualizacion.setText("Tecnología de virtualización");
        getContentPane().add(lblVirtualizacion);
        lblVirtualizacion.setBounds(310, 300, 170, 15);

        combovirtualizacion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "VMware", "XenServer", "Hyper-V" }));
        getContentPane().add(combovirtualizacion);
        combovirtualizacion.setBounds(490, 300, 96, 22);

        rbtnV.setBackground(new java.awt.Color(51, 153, 255));
        rbtnV.setText("Servidor Virtual");
        rbtnV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbtnVMouseClicked(evt);
            }
        });
        getContentPane().add(rbtnV);
        rbtnV.setBounds(354, 69, 120, 25);

        lblTitulo.setFont(new java.awt.Font("Kristen ITC", 1, 18)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(0, 0, 153));
        lblTitulo.setText("REGISTRAR SERVIDOR");
        getContentPane().add(lblTitulo);
        lblTitulo.setBounds(200, 26, 239, 25);

        btnRegistrar.setForeground(new java.awt.Color(0, 0, 153));
        btnRegistrar.setText("Registrar");
        btnRegistrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRegistrarMouseClicked(evt);
            }
        });
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });
        getContentPane().add(btnRegistrar);
        btnRegistrar.setBounds(317, 346, 87, 46);

        lblDot1.setFont(new java.awt.Font("Kristen ITC", 1, 12)); // NOI18N
        lblDot1.setText(".");
        getContentPane().add(lblDot1);
        lblDot1.setBounds(230, 170, 10, 20);

        lblCodigo.setFont(new java.awt.Font("Kristen ITC", 1, 11)); // NOI18N
        lblCodigo.setForeground(new java.awt.Color(153, 255, 255));
        lblCodigo.setText("Num.Serie del Servidor: ");
        getContentPane().add(lblCodigo);
        lblCodigo.setBounds(14, 95, 190, 16);

        txfIP1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txfIP1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txfIP1KeyTyped(evt);
            }
        });
        getContentPane().add(txfIP1);
        txfIP1.setBounds(90, 170, 30, 22);

        lblDot2.setFont(new java.awt.Font("Kristen ITC", 1, 12)); // NOI18N
        lblDot2.setText(".");
        getContentPane().add(lblDot2);
        lblDot2.setBounds(130, 170, 10, 20);

        lblDot3.setFont(new java.awt.Font("Kristen ITC", 1, 12)); // NOI18N
        lblDot3.setText(".");
        getContentPane().add(lblDot3);
        lblDot3.setBounds(180, 170, 10, 20);

        txfIP3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txfIP3KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txfIP3KeyTyped(evt);
            }
        });
        getContentPane().add(txfIP3);
        txfIP3.setBounds(190, 170, 30, 22);

        txfIP4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txfIP4KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txfIP4KeyTyped(evt);
            }
        });
        getContentPane().add(txfIP4);
        txfIP4.setBounds(240, 170, 30, 22);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ModuloServidor/common/tecnologia.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 30, 620, 410);

        setBounds(0, 0, 633, 450);
    }// </editor-fold>//GEN-END:initComponents

    private void rbtnFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbtnFMouseClicked
        
            rbtnF.setSelected(true);
            lblDataCenter.setEnabled(false);
            lblTecnologia.setEnabled(false);
            lblVirtualizacion.setEnabled(false);
            txfdataCenter.setEnabled(false);
            txftecnologia.setEnabled(false);
            combovirtualizacion.setEnabled(false);
            rbtnV.setSelected(false);
    }//GEN-LAST:event_rbtnFMouseClicked

    private void rbtnVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbtnVMouseClicked
          rbtnV.setSelected(true); 
            lblDataCenter.setEnabled(true);
            lblTecnologia.setEnabled(true);
            lblVirtualizacion.setEnabled(true);
            txfdataCenter.setEnabled(true);
            txftecnologia.setEnabled(true);
            combovirtualizacion.setEnabled(true);
            rbtnF.setSelected(false);
    }//GEN-LAST:event_rbtnVMouseClicked

    private void btnRegistrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistrarMouseClicked
       
        try
        {
        if(rbtnF.isSelected() == true)
        {
            if (txfhostname.getText().toString().equals("") || txfIP1.getText().toString().equals("") || txfIP2.getText().toString().equals("") || 
                txfIP3.getText().toString().equals("")|| txfIP4.getText().toString().equals("") ||
                txfcpu.getText().toString().equals("") || txfdiscoduro.getText().toString().equals("") ||
                txfmemoria.getText().toString().equals("")) 
            {
                JOptionPane.showMessageDialog(null, "Datos Incompletos!", "Error", JOptionPane.ERROR_MESSAGE);
            }
            else
            {
               lista_servidores= admin_servidores.Get_Servidores();//si se lleno los especios se carga la lista
        
        int respuesta = JOptionPane.showConfirmDialog(null, "Seguro de Registrar este Servidor","Question",JOptionPane.YES_NO_OPTION); 
          
          if(respuesta == JOptionPane.YES_OPTION)// si digita que si desea registrar
          {
              String IPAdd = "";
              IPAdd = txfIP1.getText().toString()+"."+txfIP2.getText().toString()
                      +"."+txfIP3.getText().toString()+"."+txfIP4.getText().toString();
            
              ServidorFisico servidor = new ServidorFisico(numeserie,txfhostname.getText().toString(),
                      IPAdd ,comboArquitectura.getSelectedItem().toString(),
                      comboSistemaoperativo.getSelectedItem().toString(),
                      Integer.parseInt(txfcpu.getText().toString()),
                      Double.parseDouble(txfdiscoduro.getText().toString()),
                      Double.parseDouble(txfmemoria.getText().toString()));
              
              
              lista_servidores.add(servidor);
               boolean exito=true;
                exito=admin_servidores.Guardar_Servidores(lista_servidores);

             if(exito != false)
             {
               
               JOptionPane.showMessageDialog(null, "Servidor Registrado","Exito", JOptionPane.INFORMATION_MESSAGE);
               admin_servidores=new AdministradorServidores();
               lista_servidores= admin_servidores.Get_Servidores();
               
               numeserie = lista_servidores.size()+1;
               lblCodigo.setText("Num.Serie del Servidor: "+(lista_servidores.size()+1));
               
                txfIP1.setText("");
                txfIP2.setText("");
                txfIP3.setText("");
                txfIP4.setText("");
               txfcpu.setText("");
               txfdataCenter.setText("");
               txfdiscoduro.setText(""); 
               txfhostname.setText("");
               txfmemoria.setText("");
               txfhostname.setText("");
               txftecnologia.setText("");
           }
           else{ JOptionPane.showMessageDialog(null, "Servidor NO Registrado","Error", JOptionPane.ERROR_MESSAGE); }
            }
            }
        }
        else
        {
            if ( txfdataCenter.getText().toString().equals("") || 
                 txftecnologia.getText().toString().equals("") || 
                 txfhostname.getText().toString().equals("") || 
                 txfIP1.getText().toString().equals("") || txfIP2.getText().toString().equals("") || 
                 txfIP3.getText().toString().equals("")|| txfIP4.getText().toString().equals("") ||
                 txfcpu.getText().toString().equals("") || txfdiscoduro.getText().toString().equals("") || 
                 txfmemoria.getText().toString().equals("")) 
            {
                JOptionPane.showMessageDialog(null, "Datos Incompletos!", "Error", JOptionPane.ERROR_MESSAGE);
            }
            else
            {
                lista_servidores= admin_servidores.Get_Servidores();//si se lleno los especios se carga la lista
        
        int respuesta = JOptionPane.showConfirmDialog(null, "Seguro de Registrar este Servidor","Question",JOptionPane.YES_NO_OPTION); 
          
          if(respuesta == JOptionPane.YES_OPTION)
          {
              
              ServidorVirtual servidor = new ServidorVirtual(txfdataCenter.getText().toString(),combovirtualizacion.getSelectedItem().toString(),
                      txftecnologia.getText().toString(),
                      numeserie,txfhostname.getText().toString(),
                      txfIP2.getText().toString(),comboArquitectura.getSelectedItem().toString(),
                      comboSistemaoperativo.getSelectedItem().toString(),
                      Integer.parseInt(txfcpu.getText().toString()),
                      Double.parseDouble(txfdiscoduro.getText().toString()),
                      Double.parseDouble(txfmemoria.getText().toString()));
              
              
              lista_servidores.add(servidor);
               boolean exito=true;
                exito=admin_servidores.Guardar_Servidores(lista_servidores);

             if(exito != false)
             {
               
               JOptionPane.showMessageDialog(null, "Servidor Registrado","Exito", JOptionPane.INFORMATION_MESSAGE);
               admin_servidores=new AdministradorServidores();
               lista_servidores=admin_servidores.Get_Servidores();
               
               numeserie = admin_servidores.UltimaSerie()+1;
               lblCodigo.setText("Num.Serie del Servidor: "+numeserie);
                txfIP1.setText("");
                txfIP2.setText("");
                txfIP3.setText("");
                txfIP4.setText("");
               txfcpu.setText("");
               txfdataCenter.setText("");
               txfdiscoduro.setText(""); 
               txfhostname.setText("");
               txfmemoria.setText("");
               txfhostname.setText("");
               txftecnologia.setText("");
           }
           else{ JOptionPane.showMessageDialog(null, "Servidor NO Registrado","Error", JOptionPane.ERROR_MESSAGE); }
            }
            }
        }  
        }
        catch(Exception e)
        {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btnRegistrarMouseClicked

    private void comboSistemaoperativoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSistemaoperativoActionPerformed
        
        if(comboSistemaoperativo.getSelectedItem().equals("Otro..."))
        {
          
           JOptionPane.showMessageDialog(null, "hola","yeah", JOptionPane.INFORMATION_MESSAGE);  
        } 
        
    }//GEN-LAST:event_comboSistemaoperativoActionPerformed

    private void txfIP1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfIP1KeyPressed
        
         if(txfIP1.getText().length()>=2)
        {
        txfIP1.setText(txfIP1.getText().substring(0, 2));
        }
        
    }//GEN-LAST:event_txfIP1KeyPressed

    private void txfIP2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfIP2KeyPressed
         if(txfIP2.getText().length()>=2)
        {
        txfIP2.setText(txfIP2.getText().substring(0, 2));
        }
    }//GEN-LAST:event_txfIP2KeyPressed

    private void txfIP3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfIP3KeyPressed
        if(txfIP3.getText().length()>=2)
        {
        txfIP3.setText(txfIP3.getText().substring(0, 2));
        }
    }//GEN-LAST:event_txfIP3KeyPressed

    private void txfIP4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfIP4KeyPressed
         if(txfIP4.getText().length()>=2)
        {
        txfIP4.setText(txfIP4.getText().substring(0, 2));
        }
    }//GEN-LAST:event_txfIP4KeyPressed

    private void txfIP1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfIP1KeyTyped
 
   if(!Character.isDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()))
{
     Toolkit.getDefaultToolkit().beep();
     evt.consume();
 }
    }//GEN-LAST:event_txfIP1KeyTyped

    private void txfIP2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfIP2KeyTyped
  if(!Character.isDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()))
{
     Toolkit.getDefaultToolkit().beep();
     evt.consume();
 }
    }//GEN-LAST:event_txfIP2KeyTyped

    private void txfIP3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfIP3KeyTyped
  if(!Character.isDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()))
{
     Toolkit.getDefaultToolkit().beep();
     evt.consume();
 }
    }//GEN-LAST:event_txfIP3KeyTyped

    private void txfIP4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfIP4KeyTyped
  if(!Character.isDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()))
{
     Toolkit.getDefaultToolkit().beep();
     evt.consume();
 }
    }//GEN-LAST:event_txfIP4KeyTyped

    private void txfdiscoduroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfdiscoduroKeyTyped
  if(!Character.isDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()))
{
     Toolkit.getDefaultToolkit().beep();
     evt.consume();
 }
    }//GEN-LAST:event_txfdiscoduroKeyTyped

    private void txfmemoriaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfmemoriaKeyTyped
   if(!Character.isDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()))
{
     Toolkit.getDefaultToolkit().beep();
     evt.consume();
 }
    }//GEN-LAST:event_txfmemoriaKeyTyped

    private void txfcpuKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfcpuKeyTyped
   if(!Character.isDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()))
{
     Toolkit.getDefaultToolkit().beep();
     evt.consume();
 }
    }//GEN-LAST:event_txfcpuKeyTyped

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void comboArquitecturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboArquitecturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboArquitecturaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JComboBox comboArquitectura;
    private javax.swing.JComboBox comboSistemaoperativo;
    private javax.swing.JComboBox combovirtualizacion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblArquitectura;
    private javax.swing.JLabel lblCantCpu;
    private javax.swing.JLabel lblCantMem;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblDataCenter;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblDot1;
    private javax.swing.JLabel lblDot2;
    private javax.swing.JLabel lblDot3;
    private javax.swing.JLabel lblHostname;
    private javax.swing.JLabel lblSO;
    private javax.swing.JLabel lblTamDiscoDuro;
    private javax.swing.JLabel lblTecnologia;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JLabel lblVirtualizacion;
    private javax.swing.JRadioButton rbtnF;
    private javax.swing.JRadioButton rbtnV;
    private javax.swing.JTextField txfIP1;
    private javax.swing.JTextField txfIP2;
    private javax.swing.JTextField txfIP3;
    private javax.swing.JTextField txfIP4;
    private javax.swing.JTextField txfcpu;
    private javax.swing.JTextField txfdataCenter;
    private javax.swing.JTextField txfdiscoduro;
    private javax.swing.JTextField txfhostname;
    private javax.swing.JTextField txfmemoria;
    private javax.swing.JTextField txftecnologia;
    // End of variables declaration//GEN-END:variables
}

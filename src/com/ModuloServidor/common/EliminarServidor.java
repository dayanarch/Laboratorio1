/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ModuloServidor.common;

import com.Servidor.common.AdministradorServidores;
import com.Servidor.common.ServidorFisico;
import com.Servidor.common.ServidorVirtual;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author LuiGui
 */
public class EliminarServidor extends javax.swing.JFrame {

    AdministradorServidores adm_servidores; 
      ArrayList<ServidorFisico> lista_Servidores;
      int index;
      
    /**
     * Creates new form EliminarServidor
     */
    public EliminarServidor() {
        initComponents();
        
        adm_servidores = new AdministradorServidores();
        lista_Servidores=new ArrayList<>();
        lista_Servidores = adm_servidores.Get_Servidores();
        
        rbtnV.setSelected(false);
        rbtnF.setSelected(false);
        rbtnF.setEnabled(false);
        rbtnV.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rbtnV = new javax.swing.JRadioButton();
        lblEliminar = new javax.swing.JLabel();
        lblinfo = new javax.swing.JLabel();
        txfBuscar = new javax.swing.JTextField();
        lblUsuarioBuscar = new javax.swing.JLabel();
        txfmemoria = new javax.swing.JTextField();
        lblTamDiscoDuro = new javax.swing.JLabel();
        lblCantCpu = new javax.swing.JLabel();
        txftecnologia = new javax.swing.JTextField();
        lblHostname = new javax.swing.JLabel();
        txfcpu = new javax.swing.JTextField();
        lblDireccion = new javax.swing.JLabel();
        lblTecnologia = new javax.swing.JLabel();
        lblCodigo = new javax.swing.JLabel();
        txfdiscoduro = new javax.swing.JTextField();
        rbtnF = new javax.swing.JRadioButton();
        txfIP = new javax.swing.JTextField();
        txfhostname = new javax.swing.JTextField();
        lblArquitectura = new javax.swing.JLabel();
        lblSO = new javax.swing.JLabel();
        txfdataCenter = new javax.swing.JTextField();
        lblDataCenter = new javax.swing.JLabel();
        lblCantMem = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        lblVirtualizacion = new javax.swing.JLabel();
        txfArquitectura = new javax.swing.JTextField();
        txfSistemaOperativo = new javax.swing.JTextField();
        txfvirtualizacion = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(null);

        rbtnV.setText("Servidor Virtual");
        getContentPane().add(rbtnV);
        rbtnV.setBounds(320, 130, 117, 23);

        lblEliminar.setFont(new java.awt.Font("Kristen ITC", 1, 14)); // NOI18N
        lblEliminar.setForeground(new java.awt.Color(51, 0, 204));
        lblEliminar.setText("ELIMINAR SERVIDOR");
        getContentPane().add(lblEliminar);
        lblEliminar.setBounds(221, 11, 183, 21);

        lblinfo.setFont(new java.awt.Font("Kristen ITC", 0, 14)); // NOI18N
        lblinfo.setForeground(new java.awt.Color(0, 0, 204));
        lblinfo.setText("Digite el numero de serie del servidor que desea eliminar:");
        getContentPane().add(lblinfo);
        lblinfo.setBounds(10, 43, 389, 20);

        txfBuscar.setToolTipText("Ingrese el Usuario que desea buscar");
        txfBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txfBuscarKeyTyped(evt);
            }
        });
        getContentPane().add(txfBuscar);
        txfBuscar.setBounds(150, 90, 113, 20);

        lblUsuarioBuscar.setFont(new java.awt.Font("Kristen ITC", 0, 11)); // NOI18N
        lblUsuarioBuscar.setForeground(new java.awt.Color(153, 255, 255));
        lblUsuarioBuscar.setText("Num.Serie del Servidor");
        getContentPane().add(lblUsuarioBuscar);
        lblUsuarioBuscar.setBounds(10, 92, 124, 16);

        txfmemoria.setEditable(false);
        getContentPane().add(txfmemoria);
        txfmemoria.setBounds(433, 187, 120, 20);

        lblTamDiscoDuro.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblTamDiscoDuro.setForeground(new java.awt.Color(153, 255, 255));
        lblTamDiscoDuro.setText("Tamaño de disco duro");
        getContentPane().add(lblTamDiscoDuro);
        lblTamDiscoDuro.setBounds(281, 190, 130, 14);

        lblCantCpu.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblCantCpu.setForeground(new java.awt.Color(0, 0, 255));
        lblCantCpu.setText("Cantidad de CPU");
        getContentPane().add(lblCantCpu);
        lblCantCpu.setBounds(285, 261, 100, 14);

        txftecnologia.setEditable(false);
        getContentPane().add(txftecnologia);
        txftecnologia.setBounds(433, 327, 120, 20);

        lblHostname.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblHostname.setForeground(new java.awt.Color(153, 255, 255));
        lblHostname.setText("Hostname");
        getContentPane().add(lblHostname);
        lblHostname.setBounds(10, 190, 70, 14);

        txfcpu.setEditable(false);
        getContentPane().add(txfcpu);
        txfcpu.setBounds(433, 258, 120, 20);

        lblDireccion.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblDireccion.setForeground(new java.awt.Color(0, 0, 204));
        lblDireccion.setText("Dirección IP");
        getContentPane().add(lblDireccion);
        lblDireccion.setBounds(15, 231, 70, 14);

        lblTecnologia.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblTecnologia.setForeground(new java.awt.Color(204, 255, 255));
        lblTecnologia.setText("Versión de tecnología");
        getContentPane().add(lblTecnologia);
        lblTecnologia.setBounds(290, 330, 130, 14);

        lblCodigo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblCodigo.setForeground(new java.awt.Color(153, 255, 255));
        lblCodigo.setText("Num.Serie del Servidor: ");
        getContentPane().add(lblCodigo);
        lblCodigo.setBounds(15, 164, 140, 14);

        txfdiscoduro.setEditable(false);
        getContentPane().add(txfdiscoduro);
        txfdiscoduro.setBounds(433, 225, 120, 20);

        rbtnF.setText("Servidor Físico");
        getContentPane().add(rbtnF);
        rbtnF.setBounds(160, 130, 104, 23);

        txfIP.setEditable(false);
        getContentPane().add(txfIP);
        txfIP.setBounds(147, 228, 116, 20);

        txfhostname.setEditable(false);
        getContentPane().add(txfhostname);
        txfhostname.setBounds(147, 190, 116, 20);

        lblArquitectura.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblArquitectura.setForeground(new java.awt.Color(153, 255, 255));
        lblArquitectura.setText("Arquitectura");
        getContentPane().add(lblArquitectura);
        lblArquitectura.setBounds(15, 263, 80, 14);

        lblSO.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblSO.setForeground(new java.awt.Color(153, 255, 255));
        lblSO.setText("Sistema Operativo");
        getContentPane().add(lblSO);
        lblSO.setBounds(285, 300, 110, 14);

        txfdataCenter.setEditable(false);
        getContentPane().add(txfdataCenter);
        txfdataCenter.setBounds(147, 289, 116, 20);

        lblDataCenter.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblDataCenter.setForeground(new java.awt.Color(153, 255, 255));
        lblDataCenter.setText("DataCenter");
        getContentPane().add(lblDataCenter);
        lblDataCenter.setBounds(10, 295, 70, 14);

        lblCantMem.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblCantMem.setForeground(new java.awt.Color(0, 0, 204));
        lblCantMem.setText("Cantidad de memoria");
        getContentPane().add(lblCantMem);
        lblCantMem.setBounds(285, 225, 130, 14);

        btnEliminar.setText("Eliminar");
        btnEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarMouseClicked(evt);
            }
        });
        getContentPane().add(btnEliminar);
        btnEliminar.setBounds(290, 370, 87, 46);

        btnBuscar.setText("Buscar");
        btnBuscar.setToolTipText("Presione para buscar elusuario digitado");
        btnBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBuscarMouseClicked(evt);
            }
        });
        getContentPane().add(btnBuscar);
        btnBuscar.setBounds(433, 69, 88, 34);

        lblVirtualizacion.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblVirtualizacion.setForeground(new java.awt.Color(153, 255, 255));
        lblVirtualizacion.setText("Tec. de virtualización");
        getContentPane().add(lblVirtualizacion);
        lblVirtualizacion.setBounds(10, 340, 120, 14);

        txfArquitectura.setEditable(false);
        getContentPane().add(txfArquitectura);
        txfArquitectura.setBounds(147, 258, 116, 20);

        txfSistemaOperativo.setEditable(false);
        getContentPane().add(txfSistemaOperativo);
        txfSistemaOperativo.setBounds(433, 289, 120, 20);

        txfvirtualizacion.setEditable(false);
        getContentPane().add(txfvirtualizacion);
        txfvirtualizacion.setBounds(147, 337, 116, 20);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ModuloServidor/common/tecnologia.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 40, 600, 420);

        setBounds(0, 0, 611, 462);
    }// </editor-fold>//GEN-END:initComponents

    private void btnEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseClicked

        try
        {
            lista_Servidores.remove(index); // lo saca de la lista
                    
            boolean exito=true;
            
            exito=adm_servidores.Guardar_Servidores(lista_Servidores); // escribe la lista

            if(exito != false)
            {
                
            JOptionPane.showMessageDialog(null, "Servidor Eliminado","Exito", JOptionPane.INFORMATION_MESSAGE);
            adm_servidores=new AdministradorServidores();
            lista_Servidores=adm_servidores.Get_Servidores();

            txfdataCenter.setText("");
            txftecnologia.setText("");
            txfvirtualizacion.setText("");
            txfhostname.setText("");
            txfIP.setText("");
            txfcpu.setText("");
            txfdiscoduro.setText("");
            txfmemoria.setText("");
            txfArquitectura.setText("");
            txfSistemaOperativo.setText("");
            rbtnF.setSelected(false);
            rbtnV.setSelected(false);
            lblCodigo.setText("Num.Serie del Servidor: ");
            txfBuscar.setText("");
            }
            else{ JOptionPane.showMessageDialog(null, "Servidor NO Eliminado","Error", JOptionPane.ERROR_MESSAGE); }
        }
        catch(Exception e)
        {
            System.out.println(e.getMessage());
        }

    }//GEN-LAST:event_btnEliminarMouseClicked

    private void btnBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseClicked

        try
        {
        if (txfBuscar.getText().toString().equals("")) {
            JOptionPane.showMessageDialog(null, "Digite el Num.Serie del Servidor que desea eliminar!!", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            txfdataCenter.setText("");
            txftecnologia.setText("");
            txfvirtualizacion.setText("");
            txfhostname.setText("");
            txfIP.setText("");
            txfcpu.setText("");
            txfdiscoduro.setText("");
            txfmemoria.setText("");
            txfArquitectura.setText("");
            txfSistemaOperativo.setText("");
            rbtnF.setSelected(false);
            rbtnV.setSelected(false);
            lblCodigo.setText("Num.Serie del Servidor: ");
            adm_servidores = new AdministradorServidores();// Lista refrescada desde el archivo

            lista_Servidores = adm_servidores.Get_Servidores();

            boolean find = false;// mientras no lo encuentre recorre el for
            boolean isvirtual = false;

            for (int i = 0; i < lista_Servidores.size(); i++) {

                if (String.valueOf(lista_Servidores.get(i).getSerie()).equals(txfBuscar.getText().toString()))//compara que el que se digita se encuentre en la lista
                {
                    lblCodigo.setText("Num.Serie del Servidor: "+String.valueOf(lista_Servidores.get(i).getSerie()));
                    txfhostname.setText(lista_Servidores.get(i).getHostname());
                    txfIP.setText(lista_Servidores.get(i).getIp());
                    txfcpu.setText(String.valueOf(lista_Servidores.get(i).getCant_cpu()));
                    txfdiscoduro.setText(String.valueOf(lista_Servidores.get(i).getTam_disco()));
                    txfmemoria.setText(String.valueOf(lista_Servidores.get(i).getCant_memoria()));
                    txfArquitectura.setText(String.valueOf(lista_Servidores.get(i).getArquitectura()));
                    txfSistemaOperativo.setText(String.valueOf(lista_Servidores.get(i).getSO()));

                    //// Si es servidor virtual entra en este if.
                    if (lista_Servidores.get(i) instanceof ServidorVirtual) {
                        txfdataCenter.setText(((ServidorVirtual) lista_Servidores.get(i)).getDataCenter());
                        txftecnologia.setText(((ServidorVirtual) lista_Servidores.get(i)).getTecno_version());
                        txfvirtualizacion.setText(((ServidorVirtual) lista_Servidores.get(i)).getTecno_virtualizacion());

                        isvirtual = true;
                        rbtnV.setSelected(true);

                    } // fin del if



                    if (isvirtual == true) {
                        rbtnF.setSelected(false);

                    } else {
                        rbtnF.setSelected(true);
                        rbtnV.setSelected(false);
                    }

                    btnEliminar.setEnabled(true);

                    find = true; // si lo encuentra
                    index = i; // index del objeto

                } // fin del if mayor en el for

            } // fin del for

            if (find != true) {
                JOptionPane.showMessageDialog(null, "No existe un servidor con ese num. de serie", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        }
        catch(Exception e)
        {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btnBuscarMouseClicked

    private void txfBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfBuscarKeyTyped
  if(!Character.isDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()))
{
     Toolkit.getDefaultToolkit().beep();
     evt.consume();
 }
    }//GEN-LAST:event_txfBuscarKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblArquitectura;
    private javax.swing.JLabel lblCantCpu;
    private javax.swing.JLabel lblCantMem;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblDataCenter;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblEliminar;
    private javax.swing.JLabel lblHostname;
    private javax.swing.JLabel lblSO;
    private javax.swing.JLabel lblTamDiscoDuro;
    private javax.swing.JLabel lblTecnologia;
    private javax.swing.JLabel lblUsuarioBuscar;
    private javax.swing.JLabel lblVirtualizacion;
    private javax.swing.JLabel lblinfo;
    private javax.swing.JRadioButton rbtnF;
    private javax.swing.JRadioButton rbtnV;
    private javax.swing.JTextField txfArquitectura;
    private javax.swing.JTextField txfBuscar;
    private javax.swing.JTextField txfIP;
    private javax.swing.JTextField txfSistemaOperativo;
    private javax.swing.JTextField txfcpu;
    private javax.swing.JTextField txfdataCenter;
    private javax.swing.JTextField txfdiscoduro;
    private javax.swing.JTextField txfhostname;
    private javax.swing.JTextField txfmemoria;
    private javax.swing.JTextField txftecnologia;
    private javax.swing.JTextField txfvirtualizacion;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ModuloAplicaciones;

import com.Aplicaciones.common.AdministrarAplicaciones;
import com.Aplicaciones.common.Aplicaciones;
import com.Servidor.common.AdministradorServidores;
import com.Servidor.common.ServidorFisico;
import com.Servidor.common.ServidorVirtual;
import com.Usuario.common.AdministrarUsuarios;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Administrador
 */
public class RegistrarAplicaciones extends javax.swing.JFrame {

    
    ArrayList<ServidorFisico> listaServidores;
     ArrayList<Aplicaciones> listaAplicaciones;
    AdministrarAplicaciones adm_Aplicaciones; 
    AdministradorServidores adm_Servidores;
    int Serie;
    
    public RegistrarAplicaciones() {
        initComponents();
        listaServidores= new ArrayList<>();
        listaAplicaciones= new ArrayList<>();
        adm_Aplicaciones= new AdministrarAplicaciones();
        adm_Servidores= new AdministradorServidores();
        listaServidores = adm_Servidores.Get_Servidores();
        listaAplicaciones = adm_Aplicaciones.GetAplicaciones();
        Serie=0;
        
       jComboCategoria.setSelectedIndex(0);
        
        if (listaServidores.size()>0)
        {
         for (int i = 0; i < listaServidores.size(); i++)
         {
             ComboServidores.addItem(listaServidores.get(i).getSerie());
         }
        }
        else
        {
             JOptionPane.showMessageDialog(null, "No existen Servidores disponibles!!", "Error", JOptionPane.ERROR_MESSAGE);
              this.dispose();
        
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNombreApp = new javax.swing.JLabel();
        lblDepartamento = new javax.swing.JLabel();
        lblEncargado = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txfNombreApp = new javax.swing.JTextField();
        txfDepartamento = new javax.swing.JTextField();
        txfEncargado = new javax.swing.JTextField();
        jComboCategoria = new javax.swing.JComboBox();
        btnRegitaraApp = new javax.swing.JButton();
        jComboTecnologia = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        rbtnV = new javax.swing.JRadioButton();
        txfmemoria = new javax.swing.JTextField();
        lblTamDiscoDuro = new javax.swing.JLabel();
        lblCantCpu = new javax.swing.JLabel();
        txftecnologia = new javax.swing.JTextField();
        lblHostname = new javax.swing.JLabel();
        txfcpu = new javax.swing.JTextField();
        lblDireccion = new javax.swing.JLabel();
        lblTecnologia = new javax.swing.JLabel();
        lblCodigo = new javax.swing.JLabel();
        txfdiscoduro = new javax.swing.JTextField();
        rbtnF = new javax.swing.JRadioButton();
        txfIP = new javax.swing.JTextField();
        txfhostname = new javax.swing.JTextField();
        lblArquitectura = new javax.swing.JLabel();
        lblSO = new javax.swing.JLabel();
        txfdataCenter = new javax.swing.JTextField();
        lblDataCenter = new javax.swing.JLabel();
        lblCantMem = new javax.swing.JLabel();
        lblVirtualizacion = new javax.swing.JLabel();
        txfArquitectura = new javax.swing.JTextField();
        txfSistemaOperativo = new javax.swing.JTextField();
        txfvirtualizacion = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txfVersion = new javax.swing.JTextField();
        ComboServidores = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(null);

        lblNombreApp.setBackground(new java.awt.Color(255, 255, 255));
        lblNombreApp.setFont(new java.awt.Font("Kristen ITC", 1, 11)); // NOI18N
        lblNombreApp.setForeground(new java.awt.Color(153, 255, 255));
        lblNombreApp.setText("Nom. de la Aplicación");
        getContentPane().add(lblNombreApp);
        lblNombreApp.setBounds(0, 360, 160, 16);

        lblDepartamento.setFont(new java.awt.Font("Kristen ITC", 1, 12)); // NOI18N
        lblDepartamento.setForeground(new java.awt.Color(153, 255, 255));
        lblDepartamento.setText("Departamento");
        getContentPane().add(lblDepartamento);
        lblDepartamento.setBounds(0, 390, 100, 17);

        lblEncargado.setFont(new java.awt.Font("Kristen ITC", 1, 12)); // NOI18N
        lblEncargado.setForeground(new java.awt.Color(153, 255, 255));
        lblEncargado.setText("Encargado");
        getContentPane().add(lblEncargado);
        lblEncargado.setBounds(0, 420, 90, 17);

        jLabel2.setFont(new java.awt.Font("Kristen ITC", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 255, 255));
        jLabel2.setText("Categoria");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(300, 360, 140, 17);

        txfNombreApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfNombreAppActionPerformed(evt);
            }
        });
        txfNombreApp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txfNombreAppKeyTyped(evt);
            }
        });
        getContentPane().add(txfNombreApp);
        txfNombreApp.setBounds(150, 360, 130, 20);
        getContentPane().add(txfDepartamento);
        txfDepartamento.setBounds(150, 390, 130, 20);

        txfEncargado.setMinimumSize(new java.awt.Dimension(699, 455));
        getContentPane().add(txfEncargado);
        txfEncargado.setBounds(150, 420, 130, 20);

        jComboCategoria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Bases de datos", "Servidores web", "Servidores de aplicación" }));
        jComboCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboCategoriaActionPerformed(evt);
            }
        });
        getContentPane().add(jComboCategoria);
        jComboCategoria.setBounds(460, 360, 140, 20);

        btnRegitaraApp.setBackground(new java.awt.Color(153, 255, 255));
        btnRegitaraApp.setForeground(new java.awt.Color(0, 0, 204));
        btnRegitaraApp.setText("Registrar");
        btnRegitaraApp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRegitaraAppMouseClicked(evt);
            }
        });
        getContentPane().add(btnRegitaraApp);
        btnRegitaraApp.setBounds(300, 450, 90, 40);

        getContentPane().add(jComboTecnologia);
        jComboTecnologia.setBounds(460, 390, 140, 20);

        jLabel3.setFont(new java.awt.Font("Kristen ITC", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 255, 255));
        jLabel3.setText("Tecnologia instalada");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(300, 390, 140, 20);

        rbtnV.setText("Servidor Virtual");
        rbtnV.setEnabled(false);
        getContentPane().add(rbtnV);
        rbtnV.setBounds(360, 70, 117, 23);

        txfmemoria.setEditable(false);
        getContentPane().add(txfmemoria);
        txfmemoria.setBounds(450, 130, 120, 20);

        lblTamDiscoDuro.setFont(new java.awt.Font("Kristen ITC", 1, 12)); // NOI18N
        lblTamDiscoDuro.setForeground(new java.awt.Color(153, 255, 255));
        lblTamDiscoDuro.setText("Tamaño de disco duro");
        getContentPane().add(lblTamDiscoDuro);
        lblTamDiscoDuro.setBounds(290, 130, 160, 17);

        lblCantCpu.setFont(new java.awt.Font("Kristen ITC", 1, 12)); // NOI18N
        lblCantCpu.setForeground(new java.awt.Color(153, 255, 255));
        lblCantCpu.setText("Cantidad de CPU");
        getContentPane().add(lblCantCpu);
        lblCantCpu.setBounds(290, 170, 140, 17);

        txftecnologia.setEditable(false);
        getContentPane().add(txftecnologia);
        txftecnologia.setBounds(450, 260, 120, 20);

        lblHostname.setFont(new java.awt.Font("Kristen ITC", 1, 11)); // NOI18N
        lblHostname.setForeground(new java.awt.Color(153, 255, 255));
        lblHostname.setText("Hostname");
        getContentPane().add(lblHostname);
        lblHostname.setBounds(10, 130, 70, 16);

        txfcpu.setEditable(false);
        getContentPane().add(txfcpu);
        txfcpu.setBounds(450, 200, 120, 20);

        lblDireccion.setFont(new java.awt.Font("Kristen ITC", 1, 11)); // NOI18N
        lblDireccion.setForeground(new java.awt.Color(153, 255, 255));
        lblDireccion.setText("Dirección IP");
        getContentPane().add(lblDireccion);
        lblDireccion.setBounds(10, 150, 90, 20);

        lblTecnologia.setFont(new java.awt.Font("Kristen ITC", 1, 12)); // NOI18N
        lblTecnologia.setForeground(new java.awt.Color(153, 255, 255));
        lblTecnologia.setText("Versión de tecnología");
        getContentPane().add(lblTecnologia);
        lblTecnologia.setBounds(290, 260, 160, 17);

        lblCodigo.setFont(new java.awt.Font("Kristen ITC", 1, 12)); // NOI18N
        lblCodigo.setForeground(new java.awt.Color(153, 255, 255));
        lblCodigo.setText("Servidores Disponibles");
        getContentPane().add(lblCodigo);
        lblCodigo.setBounds(0, 40, 160, 17);

        txfdiscoduro.setEditable(false);
        getContentPane().add(txfdiscoduro);
        txfdiscoduro.setBounds(450, 170, 120, 20);

        rbtnF.setText("Servidor Físico");
        rbtnF.setEnabled(false);
        getContentPane().add(rbtnF);
        rbtnF.setBounds(160, 70, 104, 23);

        txfIP.setEditable(false);
        getContentPane().add(txfIP);
        txfIP.setBounds(150, 160, 116, 20);

        txfhostname.setEditable(false);
        getContentPane().add(txfhostname);
        txfhostname.setBounds(150, 130, 116, 20);

        lblArquitectura.setFont(new java.awt.Font("Kristen ITC", 1, 11)); // NOI18N
        lblArquitectura.setForeground(new java.awt.Color(153, 255, 255));
        lblArquitectura.setText("Arquitectura");
        getContentPane().add(lblArquitectura);
        lblArquitectura.setBounds(10, 190, 100, 16);

        lblSO.setFont(new java.awt.Font("Kristen ITC", 1, 12)); // NOI18N
        lblSO.setForeground(new java.awt.Color(153, 255, 255));
        lblSO.setText("Sistema Operativo");
        getContentPane().add(lblSO);
        lblSO.setBounds(290, 230, 140, 17);

        txfdataCenter.setEditable(false);
        getContentPane().add(txfdataCenter);
        txfdataCenter.setBounds(150, 220, 116, 20);

        lblDataCenter.setFont(new java.awt.Font("Kristen ITC", 1, 12)); // NOI18N
        lblDataCenter.setForeground(new java.awt.Color(153, 255, 255));
        lblDataCenter.setText("DataCenter");
        getContentPane().add(lblDataCenter);
        lblDataCenter.setBounds(10, 220, 90, 17);

        lblCantMem.setFont(new java.awt.Font("Kristen ITC", 1, 12)); // NOI18N
        lblCantMem.setForeground(new java.awt.Color(153, 255, 255));
        lblCantMem.setText("Cantidad de memoria");
        getContentPane().add(lblCantMem);
        lblCantMem.setBounds(290, 200, 160, 17);

        lblVirtualizacion.setFont(new java.awt.Font("Kristen ITC", 1, 11)); // NOI18N
        lblVirtualizacion.setForeground(new java.awt.Color(153, 255, 255));
        lblVirtualizacion.setText("Tec. de virtualización");
        getContentPane().add(lblVirtualizacion);
        lblVirtualizacion.setBounds(0, 250, 140, 16);

        txfArquitectura.setEditable(false);
        getContentPane().add(txfArquitectura);
        txfArquitectura.setBounds(150, 190, 116, 20);

        txfSistemaOperativo.setEditable(false);
        getContentPane().add(txfSistemaOperativo);
        txfSistemaOperativo.setBounds(450, 230, 120, 20);

        txfvirtualizacion.setEditable(false);
        getContentPane().add(txfvirtualizacion);
        txfvirtualizacion.setBounds(150, 250, 116, 20);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(367, 394, 0, 0);

        jLabel4.setFont(new java.awt.Font("Kristen ITC", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 255, 255));
        jLabel4.setText("Version de la tecnologia");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(300, 420, 170, 17);

        txfVersion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txfVersionKeyTyped(evt);
            }
        });
        getContentPane().add(txfVersion);
        txfVersion.setBounds(460, 420, 140, 20);

        ComboServidores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboServidoresActionPerformed(evt);
            }
        });
        getContentPane().add(ComboServidores);
        ComboServidores.setBounds(180, 40, 81, 20);

        jLabel5.setFont(new java.awt.Font("Kristen ITC", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 255, 255));
        jLabel5.setText("REGISTRAR APLICACIONES");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(150, 310, 300, 25);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ModuloAplicaciones/Bio-Grid_Computing.jpg"))); // NOI18N
        jLabel6.setText("jLabel6");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(0, 0, 610, 500);

        setBounds(0, 0, 628, 541);
    }// </editor-fold>//GEN-END:initComponents

    private void txfNombreAppKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfNombreAppKeyTyped
        //EL PRIMER EVENTO DE NOMBRE DE APLICACION

    }//GEN-LAST:event_txfNombreAppKeyTyped

    private void BuscarServidores(int Index)
    {
       try
        {
            txfdataCenter.setText("");
            txftecnologia.setText("");
            txfvirtualizacion.setText("");
            txfhostname.setText("");
            txfIP.setText("");
            txfcpu.setText("");
            txfdiscoduro.setText("");
            txfmemoria.setText("");
            txfArquitectura.setText("");
            txfSistemaOperativo.setText("");
            rbtnF.setSelected(false);
            rbtnV.setSelected(false);
           Serie=0;
            adm_Servidores = new AdministradorServidores();// Lista refrescada desde el archivo

            listaServidores = adm_Servidores.Get_Servidores();

            boolean isvirtual = false;

           
                    Serie=listaServidores.get(Index).getSerie();
                    txfhostname.setText(listaServidores.get(Index).getHostname());
                    txfIP.setText(listaServidores.get(Index).getIp());
                    txfcpu.setText(String.valueOf(listaServidores.get(Index).getCant_cpu()));
                    txfdiscoduro.setText(String.valueOf(listaServidores.get(Index).getTam_disco()));
                    txfmemoria.setText(String.valueOf(listaServidores.get(Index).getCant_memoria()));
                    txfArquitectura.setText(String.valueOf(listaServidores.get(Index).getArquitectura()));
                    txfSistemaOperativo.setText(String.valueOf(listaServidores.get(Index).getSO()));

                    //// Si es servidor virtual entra en este if.
                    if (listaServidores.get(Index) instanceof ServidorVirtual) {
                        txfdataCenter.setText(((ServidorVirtual) listaServidores.get(Index)).getDataCenter());
                        txftecnologia.setText(((ServidorVirtual) listaServidores.get(Index)).getTecno_version());
                        txfvirtualizacion.setText(((ServidorVirtual) listaServidores.get(Index)).getTecno_virtualizacion());

                        isvirtual = true;
                        rbtnV.setSelected(true);

                    } // fin del if



                    if (isvirtual == true) {
                        rbtnF.setSelected(false);

                    } else {
                        rbtnF.setSelected(true);
                        rbtnV.setSelected(false);
                    }

        }
        catch(Exception e)
        {
            System.out.println(e.getMessage());
        }
    
    
    }
    
    private void btnRegitaraAppMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegitaraAppMouseClicked

        try
        {

            if (txfNombreApp.getText().toString().equals("") || txfVersion.getText().toString().equals("") ||
                    txfDepartamento.getText().toString().equals("") || txfEncargado.getText().toString().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Datos Incompletos!", "Error", JOptionPane.ERROR_MESSAGE);
            }
            else
            {
                listaAplicaciones = adm_Aplicaciones.GetAplicaciones();//si se lleno los especios se carga la lista

                int respuesta = JOptionPane.showConfirmDialog(null, "Seguro de Guardar esta Aplicacion","Question",JOptionPane.YES_NO_OPTION);

                if(respuesta == JOptionPane.YES_OPTION)
                {

                    Aplicaciones apps = new Aplicaciones(txfNombreApp.getText().toString(),txfDepartamento.getText().toString(),txfEncargado.getText().toString(),
                            Serie,jComboCategoria.getSelectedItem().toString(),jComboTecnologia.getSelectedItem().toString(),txfVersion.getText().toString());

                    listaAplicaciones.add(apps);
                    boolean exito=true;
                    exito = adm_Aplicaciones.GuardarAplicaciones(listaAplicaciones);

                    if(exito != false)
                    {
                        JOptionPane.showMessageDialog(null, "App Registrada","Exito", JOptionPane.INFORMATION_MESSAGE);
                        adm_Aplicaciones=new AdministrarAplicaciones();
                        listaAplicaciones= adm_Aplicaciones.GetAplicaciones();

                        txfNombreApp.setText("");
                        txfDepartamento.setText("");
                        txfEncargado.setText("");
                        txfVersion.setText("");
                    }
                    else{ JOptionPane.showMessageDialog(null, "Aplicacion NO Registrada","Error", JOptionPane.ERROR_MESSAGE); }
                }
            }
        }
        catch(Exception e)
        {
            System.out.println(e.getMessage());
        }
    }
//GEN-LAST:event_btnRegitaraAppMouseClicked

    private void ComboServidoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboServidoresActionPerformed
     
        this.BuscarServidores(ComboServidores.getSelectedIndex());
    }//GEN-LAST:event_ComboServidoresActionPerformed

    private void jComboCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboCategoriaActionPerformed
        
        jComboTecnologia.removeAllItems();
        
        if(jComboCategoria.getSelectedItem().equals("Bases de datos"))
        {
            jComboTecnologia.addItem("MySQL");
            jComboTecnologia.addItem("Micrsoft SQL Server");
            jComboTecnologia.addItem("Oracle");
        }
        
        if(jComboCategoria.getSelectedItem().equals("Servidores web"))
        {
            jComboTecnologia.addItem("Apache");
            jComboTecnologia.addItem("IIS");
        }
        
        if(jComboCategoria.getSelectedItem().equals("Servidores de aplicación"))
        {
            jComboTecnologia.addItem("JBoss");
            jComboTecnologia.addItem("WebSphere");
            jComboTecnologia.addItem("Tomcat");
            jComboTecnologia.addItem("Weblogic");
        }
        
    }//GEN-LAST:event_jComboCategoriaActionPerformed

    private void txfVersionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfVersionKeyTyped
      
  if(!Character.isDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()))
{
     Toolkit.getDefaultToolkit().beep();
     evt.consume();
 }
    }//GEN-LAST:event_txfVersionKeyTyped

    private void txfNombreAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfNombreAppActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfNombreAppActionPerformed

 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox ComboServidores;
    private javax.swing.JButton btnRegitaraApp;
    private javax.swing.JComboBox jComboCategoria;
    private javax.swing.JComboBox jComboTecnologia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lblArquitectura;
    private javax.swing.JLabel lblCantCpu;
    private javax.swing.JLabel lblCantMem;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblDataCenter;
    private javax.swing.JLabel lblDepartamento;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblEncargado;
    private javax.swing.JLabel lblHostname;
    private javax.swing.JLabel lblNombreApp;
    private javax.swing.JLabel lblSO;
    private javax.swing.JLabel lblTamDiscoDuro;
    private javax.swing.JLabel lblTecnologia;
    private javax.swing.JLabel lblVirtualizacion;
    private javax.swing.JRadioButton rbtnF;
    private javax.swing.JRadioButton rbtnV;
    private javax.swing.JTextField txfArquitectura;
    private javax.swing.JTextField txfDepartamento;
    private javax.swing.JTextField txfEncargado;
    private javax.swing.JTextField txfIP;
    private javax.swing.JTextField txfNombreApp;
    private javax.swing.JTextField txfSistemaOperativo;
    private javax.swing.JTextField txfVersion;
    private javax.swing.JTextField txfcpu;
    private javax.swing.JTextField txfdataCenter;
    private javax.swing.JTextField txfdiscoduro;
    private javax.swing.JTextField txfhostname;
    private javax.swing.JTextField txfmemoria;
    private javax.swing.JTextField txftecnologia;
    private javax.swing.JTextField txfvirtualizacion;
    // End of variables declaration//GEN-END:variables
}
